{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/hooks/http-hooks.js","shared/components/UIElement/ErrorModal.js","shared/components/UIElement/Modal.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abort","clearError","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerCLass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/0.8e865b61.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState();\r\n\r\n\tconst activeHttpRequests = useRef([]);\r\n\r\n\tconst sendRequest = useCallback(\r\n\t\tasync (url, method = \"GET\", body = null, headers = {}) => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst httpAbortCtrl = new AbortController();\r\n\t\t\tactiveHttpRequests.current.push(httpAbortCtrl);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, {\r\n\t\t\t\t\tmethod,\r\n\t\t\t\t\tbody,\r\n\t\t\t\t\theaders,\r\n\t\t\t\t\tsignal: httpAbortCtrl.signal,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst responseData = await response.json();\r\n\r\n\t\t\t\tactiveHttpRequests.current = activeHttpRequests.current.filter(\r\n\t\t\t\t\t(reqCtrl) => reqCtrl !== httpAbortCtrl\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(responseData.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\treturn responseData;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetError(error.message);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearError = () => {\r\n\t\tsetError(null);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tactiveHttpRequests.current.forEach((signal) => signal.abort());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n\tconst content = (\r\n\t\t<div className={`modal ${props.className}`} style={props.style}>\r\n\t\t\t<header className={`modal__header ${props.headerClass}`}>\r\n\t\t\t\t<h2>{props.header}</h2>\r\n\t\t\t</header>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={\r\n\t\t\t\t\tprops.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div className={`modal__content ${props.contentClass}`}>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer className={`modal__footer ${props.footerCLass}`}>\r\n\t\t\t\t\t{props.footer}\r\n\t\t\t\t</footer>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.show && <Backdrop onClick={props.onCancel} />}\r\n\t\t\t<CSSTransition\r\n\t\t\t\tin={props.show}\r\n\t\t\t\tmountOnEnter\r\n\t\t\t\tunmountOnExit\r\n\t\t\t\ttimeout={200}\r\n\t\t\t\tclassNames=\"modal\"\r\n\t\t\t>\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}"],"sourceRoot":""}