{"version":3,"sources":["shared/components/UIElement/Card.js","shared/components/UIElement/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","response","users","fetchUsers","Fragment","ErrorModal","onClose","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,8MCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCiBpCE,G,MApBE,SAACV,GACjB,OACC,wBAAIC,UAAU,aACb,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACf,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACP,yBAAKX,UAAU,oBACd,kBAAC,EAAD,CAAQK,MAAOO,iCAAA,WAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAElF,yBAAKb,UAAU,mBACd,4BAAKD,EAAMc,MACX,4BACEd,EAAMe,WADR,IAC0C,IAArBf,EAAMe,WAAmB,QAAU,gBCc/CC,G,MA1BG,SAAChB,GAClB,OAA2B,IAAvBA,EAAMiB,MAAMC,OAEd,yBAAKjB,UAAU,UACV,kBAACF,EAAA,EAAD,KACF,gDAOJ,wBAAIE,UAAU,cACZD,EAAMiB,MAAME,KAAI,SAACC,GAAD,OAChB,kBAAC,EAAD,CACCC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,eCYdK,UA7BD,WACb,MAAoDC,cAA7CC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,WACtC,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKN,EAAYd,6CADjB,OACZqB,EADY,OAElBH,EAAeG,EAASC,OAFN,2CAAH,qDAIhBC,KACE,CAACT,IAMJ,OACC,kBAAC,IAAMU,SAAP,KACEX,GAAS,kBAACY,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QANjB,WACpBX,OAMEH,GACA,yBAAKxB,UAAU,UACd,kBAACuC,EAAA,EAAD,QAGAf,GAAaK,GAAe,kBAAC,EAAD,CAAWb,MAAOa","file":"static/js/8.9f11c168.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElement/Avatar\";\r\nimport Card from \"../../shared/components/UIElement/Card\"\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n\treturn (\r\n\t\t<li className=\"user-item\">\r\n\t\t\t<Card className=\"user-item__content\">\r\n\t\t\t\t<Link to={`/${props.id}/places`}>\r\n\t\t\t\t\t<div className=\"user-item__image\">\r\n\t\t\t\t\t\t<Avatar image={process.env.REACT_APP_BACKEND_URL + `/${props.image}`} alt={props.name} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-item__info\">\r\n\t\t\t\t\t\t<h2>{props.name}</h2>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t{props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport Card from '../../shared/components/UIElement/Card'\r\nimport \"./UsersList.css\";\r\n\r\nconst UsersList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\">\r\n        <Card>\r\n\t\t\t\t  <h2>No users found</h2>\r\n        </Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"users-list\">\r\n\t\t\t{props.items.map((user) => (\r\n\t\t\t\t<UserItem\r\n\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\tid={user.id}\r\n\t\t\t\t\timage={user.image}\r\n\t\t\t\t\tname={user.name}\r\n\t\t\t\t\tplaceCount={user.places.length}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hooks\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElement/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElement/LoadingSpinner\";\r\nimport UsersList from \"../components/UsersList\";\r\n\r\nconst Users = () => {\r\n\tconst {isLoading, error, sendRequest, clearError} = useHttpClient()\r\n\tconst [loadedUsers, setLoadedUsers] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUsers = async () => {\r\n\t\t\tconst response = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/api/users/\");\r\n\t\t\tsetLoadedUsers(response.users)\r\n\t\t};\r\n\t\tfetchUsers();\r\n\t}, [sendRequest]);\r\n\r\n\tconst errorHandler = () => {\r\n\t\tclearError();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{error && <ErrorModal error={error} onClose={errorHandler} />}\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}