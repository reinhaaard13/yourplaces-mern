{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElement/LoadingSpinner.js","shared/components/UIElement/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","authCtx","useContext","history","useHistory","event","preventDefault","push","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.402220f3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n\tconst [token, setToken] = useState(null);\r\n\tconst [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\tconst [userId, setUserId] = useState(null);\r\n\r\n\tconst login = useCallback((userId, token, expirationDate) => {\r\n\t\tsetToken(token);\r\n\t\tsetUserId(userId);\r\n\r\n\t\tconst tokenExpirationDate =\r\n\t\t\texpirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n\t\tsetTokenExpirationDate(tokenExpirationDate);\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"userData\",\r\n\t\t\tJSON.stringify({\r\n\t\t\t\tuserId,\r\n\t\t\t\ttoken,\r\n\t\t\t\texpiration: tokenExpirationDate.toISOString(),\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\tconst logout = useCallback(() => {\r\n\t\tsetToken(null);\r\n\t\tsetUserId(null);\r\n\t\tsetTokenExpirationDate(null);\r\n\t\tlocalStorage.removeItem(\"userData\");\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token && tokenExpirationDate) {\r\n\t\t\tconst remainingTime =\r\n\t\t\t\ttokenExpirationDate.getTime() - new Date().getTime();\r\n\t\t\tlogoutTimer = setTimeout(logout, remainingTime);\r\n\t\t} else {\r\n\t\t\tclearTimeout(logoutTimer);\r\n\t\t}\r\n\t}, [token, logout, tokenExpirationDate]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\t\tif (\r\n\t\t\tstoredData &&\r\n\t\t\tstoredData.token &&\r\n\t\t\tnew Date(storedData.expiration) > new Date()\r\n\t\t) {\r\n\t\t\tlogin(\r\n\t\t\t\tstoredData.userId,\r\n\t\t\t\tstoredData.token,\r\n\t\t\t\tnew Date(storedData.expiration)\r\n\t\t\t);\r\n\t\t}\r\n\t}, [login]);\r\n\r\n  return { token, login, logout, userId }\r\n};\r\n","import React from 'react'\r\n\r\nimport './MainHeader.css'\r\n\r\nconst MainHeader = (props) => {\r\n  return (\r\n    <header className='main-header'>\r\n      {props.children}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default MainHeader","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport Button from \"../FormElements/Button\";\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = () => {\r\n  const authCtx = useContext(AuthContext);\r\n\tconst history = useHistory()\r\n\r\n\tconst logoutHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tauthCtx.logout();\r\n\t\thistory.push('/auth')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"nav-links\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/\" exact>\r\n\t\t\t\t\tALL USERS\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t\t{authCtx.isLoggedIn && (<li>\r\n\t\t\t\t<NavLink to={`/${authCtx.userId}/places`}>MY PLACES</NavLink>\r\n\t\t\t</li>)}\r\n\t\t\t{authCtx.isLoggedIn && (<li>\r\n\t\t\t\t<NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n\t\t\t</li>)}\r\n\t\t\t{authCtx.isLoggedIn && (<li>\r\n\t\t\t\t<Button onClick={logoutHandler}>LOGOUT</Button>\r\n\t\t\t</li>)}\r\n\t\t\t{!authCtx.isLoggedIn && (<li>\r\n\t\t\t\t<NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n\t\t\t</li>)}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n\tconst content = (\r\n\t\t<CSSTransition\r\n\t\t\tin={props.show}\r\n\t\t\ttimeout={200}\r\n\t\t\tclassNames=\"slide-in-left\"\r\n\t\t\tmountOnEnter\r\n      unmountOnExit\r\n\t\t>\r\n\t\t\t<aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n\t\t</CSSTransition>\r\n\t);\r\n\r\n\treturn ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElement/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = () => {\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true)\r\n  }\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false)\r\n  }\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\t\t\t<MainHeader>\r\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t</button>\r\n\t\t\t\t<h1 className=\"main-navigation__title\">\r\n\t\t\t\t\t<Link to=\"/\">YourPlaces</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</MainHeader>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tRedirect,\n\tRoute,\n\tSwitch,\n} from \"react-router-dom\";\n\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nimport LoadingSpinner from \"./shared/components/UIElement/LoadingSpinner\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n// import Users from \"./user/pages/Users\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n\tconst { token, login, logout, userId } = useAuth();\n\n\tlet routes;\n\n\tif (token) {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Users />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places/new\" exact>\n\t\t\t\t\t<NewPlace />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/places/:placeId\" exact>\n\t\t\t\t\t<UpdatePlace />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t<UserPlaces />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t);\n\t} else {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Users />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t<UserPlaces />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/auth\" exact>\n\t\t\t\t\t<Auth />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/auth\" />\n\t\t\t</Switch>\n\t\t);\n\t}\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{ isLoggedIn: !!token, token, userId, login, logout }}\n\t\t>\n\t\t\t<Router>\n\t\t\t\t<MainNavigation />\n\t\t\t\t<main>\n\t\t\t\t\t<Suspense\n\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{routes}\n\t\t\t\t\t</Suspense>\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}